initSidebarItems({"enum":[["Adapter","List of possible `@interface` adapters that can be listed in a module."],["FuncKind","Different flavors of functions that can be defined."],["Implementation","Different ways to specify an implementation"],["Implemented","Different ways to specify what's being implemented"],["Instruction","List of instructions in adapter functions."],["ValType","Possible value types that can be used in function signatures and such."]],"fn":[["parse_bytes","Parses in-memory bytes as either the text format or a binary WebAssembly module."],["parse_file","Parses a `file` on the filesystem as a textual representation of WebAssembly Interface Types, returning the binary representation of the module."],["parse_str","Parses an in-memory string as the text format, returning the file as a binary WebAssembly file."]],"struct":[["Export","An exported wasm interface types function"],["Func","A definition of an adapter function"],["Implement","A means of implementing a core wasm imported function with an adapter function."],["Import","An imported function declaration using wasm interface types."],["Instructions","A list of instructions, possibly in s-expression form"],["MemoryToString","Payload of the `memory-to-string` instruction"],["Module","A WebAssembly interface types-enhanced module."],["StringToMemory","Payload of the `string-to-memory` instruction"],["Type","A type declaration in a wasm interface type subsection"],["TypeUse","An inline type definition or a use of a type defined elsewhere."],["Wat","A `*.wat` file in its entirety, including wasm interface types."]]});