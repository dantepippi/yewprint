(function() {var implementors = {};
implementors["anyhow"] = [{"text":"impl&lt;'a&gt; Clone for Chain&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["anymap"] = [{"text":"impl Clone for Box&lt;dyn CloneAny&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Box&lt;dyn CloneAny + Send&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Box&lt;dyn CloneAny + Sync&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Box&lt;dyn CloneAny + Send + Sync&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized + UncheckedAnyExt&gt; Clone for RawMap&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;A&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, A:&nbsp;Clone + ?Sized + UncheckedAnyExt&gt; Clone for Iter&lt;'a, A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;?Sized + UncheckedAnyExt&gt; Clone for Map&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Box&lt;A&gt;: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["arrayvec"] = [{"text":"impl&lt;A&gt; Clone for ArrayString&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Array&lt;Item = u8&gt; + Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for CapacityError&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Clone for IntoIter&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Clone for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Clone,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["bincode"] = [{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]},{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl Clone for NativeEndian","synthetic":false,"types":[]},{"text":"impl Clone for FixintEncoding","synthetic":false,"types":[]},{"text":"impl Clone for VarintEncoding","synthetic":false,"types":[]},{"text":"impl Clone for Config","synthetic":false,"types":[]},{"text":"impl Clone for Bounded","synthetic":false,"types":[]},{"text":"impl Clone for Infinite","synthetic":false,"types":[]},{"text":"impl Clone for AllowTrailing","synthetic":false,"types":[]},{"text":"impl Clone for RejectTrailing","synthetic":false,"types":[]},{"text":"impl Clone for DefaultOptions","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Clone + Options, L:&nbsp;Clone + SizeLimit&gt; Clone for WithOtherLimit&lt;O, L&gt;","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Clone + Options, E:&nbsp;Clone + BincodeByteOrder&gt; Clone for WithOtherEndian&lt;O, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Clone + Options, I:&nbsp;Clone + IntEncoding&gt; Clone for WithOtherIntEncoding&lt;O, I&gt;","synthetic":false,"types":[]},{"text":"impl&lt;O:&nbsp;Clone + Options, T:&nbsp;Clone + TrailingBytes&gt; Clone for WithOtherTrailing&lt;O, T&gt;","synthetic":false,"types":[]}];
implementors["bumpalo"] = [{"text":"impl&lt;E:&nbsp;Clone&gt; Clone for AllocOrInitError&lt;E&gt;","synthetic":false,"types":[]}];
implementors["byteorder"] = [{"text":"impl Clone for BigEndian","synthetic":false,"types":[]},{"text":"impl Clone for LittleEndian","synthetic":false,"types":[]}];
implementors["bytes"] = [{"text":"impl Clone for Bytes","synthetic":false,"types":[]},{"text":"impl Clone for BytesMut","synthetic":false,"types":[]}];
implementors["gloo_events"] = [{"text":"impl Clone for EventListenerPhase","synthetic":false,"types":[]},{"text":"impl Clone for EventListenerOptions","synthetic":false,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;T&gt; Clone for Bucket&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for RawTable&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for RawIter&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K:&nbsp;Clone, V:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for HashMap&lt;K, V, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Iter&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Keys&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Values&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone, S:&nbsp;Clone&gt; Clone for HashSet&lt;T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K&gt; Clone for Iter&lt;'_, K&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Intersection&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Difference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for SymmetricDifference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Union&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl Clone for TryReserveError","synthetic":false,"types":[]}];
implementors["http"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for HeaderMap&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HeaderName","synthetic":false,"types":[]},{"text":"impl Clone for HeaderValue","synthetic":false,"types":[]},{"text":"impl Clone for Method","synthetic":false,"types":[]},{"text":"impl Clone for StatusCode","synthetic":false,"types":[]},{"text":"impl Clone for Authority","synthetic":false,"types":[]},{"text":"impl Clone for PathAndQuery","synthetic":false,"types":[]},{"text":"impl Clone for Scheme","synthetic":false,"types":[]},{"text":"impl Clone for Uri","synthetic":false,"types":[]},{"text":"impl Clone for Version","synthetic":false,"types":[]}];
implementors["id_tree"] = [{"text":"impl&lt;'a, T&gt; Clone for Ancestors&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for AncestorIds&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Children&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ChildrenIds&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for PreOrderTraversal&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for PreOrderTraversalIds&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for PostOrderTraversal&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for PostOrderTraversalIds","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for LevelOrderTraversal&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for LevelOrderTraversalIds&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Tree&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for NodeId","synthetic":false,"types":[]}];
implementors["indexmap"] = [{"text":"impl&lt;K, V, S&gt; Clone for IndexMap&lt;K, V, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Keys&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Values&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;K, V&gt; Clone for Iter&lt;'_, K, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for IndexSet&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Iter&lt;'_, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Difference&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Intersection&lt;'_, T, S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S1, S2&gt; Clone for SymmetricDifference&lt;'_, T, S1, S2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, S&gt; Clone for Union&lt;'_, T, S&gt;","synthetic":false,"types":[]}];
implementors["itoa"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["js_sys"] = [{"text":"impl Clone for Array","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ArrayIter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ArrayBuffer","synthetic":false,"types":[]},{"text":"impl Clone for SharedArrayBuffer","synthetic":false,"types":[]},{"text":"impl Clone for Boolean","synthetic":false,"types":[]},{"text":"impl Clone for DataView","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl Clone for EvalError","synthetic":false,"types":[]},{"text":"impl Clone for Function","synthetic":false,"types":[]},{"text":"impl Clone for Generator","synthetic":false,"types":[]},{"text":"impl Clone for Map","synthetic":false,"types":[]},{"text":"impl Clone for Iterator","synthetic":false,"types":[]},{"text":"impl Clone for AsyncIterator","synthetic":false,"types":[]},{"text":"impl Clone for IteratorNext","synthetic":false,"types":[]},{"text":"impl Clone for Number","synthetic":false,"types":[]},{"text":"impl Clone for Date","synthetic":false,"types":[]},{"text":"impl Clone for Object","synthetic":false,"types":[]},{"text":"impl Clone for Proxy","synthetic":false,"types":[]},{"text":"impl Clone for RangeError","synthetic":false,"types":[]},{"text":"impl Clone for ReferenceError","synthetic":false,"types":[]},{"text":"impl Clone for RegExp","synthetic":false,"types":[]},{"text":"impl Clone for Set","synthetic":false,"types":[]},{"text":"impl Clone for SyntaxError","synthetic":false,"types":[]},{"text":"impl Clone for TypeError","synthetic":false,"types":[]},{"text":"impl Clone for UriError","synthetic":false,"types":[]},{"text":"impl Clone for WeakMap","synthetic":false,"types":[]},{"text":"impl Clone for WeakSet","synthetic":false,"types":[]},{"text":"impl Clone for CompileError","synthetic":false,"types":[]},{"text":"impl Clone for Instance","synthetic":false,"types":[]},{"text":"impl Clone for LinkError","synthetic":false,"types":[]},{"text":"impl Clone for RuntimeError","synthetic":false,"types":[]},{"text":"impl Clone for Module","synthetic":false,"types":[]},{"text":"impl Clone for Table","synthetic":false,"types":[]},{"text":"impl Clone for Memory","synthetic":false,"types":[]},{"text":"impl Clone for JsString","synthetic":false,"types":[]},{"text":"impl Clone for Symbol","synthetic":false,"types":[]},{"text":"impl Clone for Collator","synthetic":false,"types":[]},{"text":"impl Clone for DateTimeFormat","synthetic":false,"types":[]},{"text":"impl Clone for NumberFormat","synthetic":false,"types":[]},{"text":"impl Clone for PluralRules","synthetic":false,"types":[]},{"text":"impl Clone for Promise","synthetic":false,"types":[]},{"text":"impl Clone for Int8Array","synthetic":false,"types":[]},{"text":"impl Clone for Int16Array","synthetic":false,"types":[]},{"text":"impl Clone for Int32Array","synthetic":false,"types":[]},{"text":"impl Clone for Uint8Array","synthetic":false,"types":[]},{"text":"impl Clone for Uint8ClampedArray","synthetic":false,"types":[]},{"text":"impl Clone for Uint16Array","synthetic":false,"types":[]},{"text":"impl Clone for Uint32Array","synthetic":false,"types":[]},{"text":"impl Clone for Float32Array","synthetic":false,"types":[]},{"text":"impl Clone for Float64Array","synthetic":false,"types":[]}];
implementors["lexical_core"] = [{"text":"impl Clone for ErrorCode","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl Clone for Level","synthetic":false,"types":[]},{"text":"impl Clone for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Record&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Metadata&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl Clone for TokenStream","synthetic":false,"types":[]},{"text":"impl Clone for Span","synthetic":false,"types":[]},{"text":"impl Clone for TokenTree","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl Clone for Delimiter","synthetic":false,"types":[]},{"text":"impl Clone for Punct","synthetic":false,"types":[]},{"text":"impl Clone for Spacing","synthetic":false,"types":[]},{"text":"impl Clone for Ident","synthetic":false,"types":[]},{"text":"impl Clone for Literal","synthetic":false,"types":[]},{"text":"impl Clone for IntoIter","synthetic":false,"types":[]}];
implementors["ryu"] = [{"text":"impl Clone for Buffer","synthetic":false,"types":[]}];
implementors["serde"] = [{"text":"impl Clone for Error","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UnitDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for BoolDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for IsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U8Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U16Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for UsizeDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for F64Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for CharDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for I128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U128Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for U32Deserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for StrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedStrDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;E&gt; Clone for StringDeserializer&lt;E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, E&gt; Clone for CowStrDeserializer&lt;'a, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, E&gt; Clone for BytesDeserializer&lt;'a, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, E&gt; Clone for BorrowedBytesDeserializer&lt;'de, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;I:&nbsp;Clone, E:&nbsp;Clone&gt; Clone for SeqDeserializer&lt;I, E&gt;","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for SeqAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'de, I, E&gt; Clone for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Iterator + Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;I::Item: Pair,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;I::Item as Pair&gt;::Second: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Clone&gt; Clone for MapAccessDeserializer&lt;A&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IgnoredAny","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Unexpected&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["serde_json"] = [{"text":"impl Clone for Category","synthetic":false,"types":[]},{"text":"impl Clone for Map&lt;String, Value&gt;","synthetic":false,"types":[]},{"text":"impl Clone for CompactFormatter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PrettyFormatter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Value","synthetic":false,"types":[]},{"text":"impl Clone for Number","synthetic":false,"types":[]}];
implementors["slab"] = [{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Slab&lt;T&gt;","synthetic":false,"types":[]}];
implementors["snowflake"] = [{"text":"impl Clone for ProcessUniqueId","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl Clone for Underscore","synthetic":false,"types":[]},{"text":"impl Clone for Abstract","synthetic":false,"types":[]},{"text":"impl Clone for As","synthetic":false,"types":[]},{"text":"impl Clone for Async","synthetic":false,"types":[]},{"text":"impl Clone for Auto","synthetic":false,"types":[]},{"text":"impl Clone for Await","synthetic":false,"types":[]},{"text":"impl Clone for Become","synthetic":false,"types":[]},{"text":"impl Clone for Box","synthetic":false,"types":[]},{"text":"impl Clone for Break","synthetic":false,"types":[]},{"text":"impl Clone for Const","synthetic":false,"types":[]},{"text":"impl Clone for Continue","synthetic":false,"types":[]},{"text":"impl Clone for Crate","synthetic":false,"types":[]},{"text":"impl Clone for Default","synthetic":false,"types":[]},{"text":"impl Clone for Do","synthetic":false,"types":[]},{"text":"impl Clone for Dyn","synthetic":false,"types":[]},{"text":"impl Clone for Else","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Extern","synthetic":false,"types":[]},{"text":"impl Clone for Final","synthetic":false,"types":[]},{"text":"impl Clone for Fn","synthetic":false,"types":[]},{"text":"impl Clone for For","synthetic":false,"types":[]},{"text":"impl Clone for If","synthetic":false,"types":[]},{"text":"impl Clone for Impl","synthetic":false,"types":[]},{"text":"impl Clone for In","synthetic":false,"types":[]},{"text":"impl Clone for Let","synthetic":false,"types":[]},{"text":"impl Clone for Loop","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for Match","synthetic":false,"types":[]},{"text":"impl Clone for Mod","synthetic":false,"types":[]},{"text":"impl Clone for Move","synthetic":false,"types":[]},{"text":"impl Clone for Mut","synthetic":false,"types":[]},{"text":"impl Clone for Override","synthetic":false,"types":[]},{"text":"impl Clone for Priv","synthetic":false,"types":[]},{"text":"impl Clone for Pub","synthetic":false,"types":[]},{"text":"impl Clone for Ref","synthetic":false,"types":[]},{"text":"impl Clone for Return","synthetic":false,"types":[]},{"text":"impl Clone for SelfType","synthetic":false,"types":[]},{"text":"impl Clone for SelfValue","synthetic":false,"types":[]},{"text":"impl Clone for Static","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for Super","synthetic":false,"types":[]},{"text":"impl Clone for Trait","synthetic":false,"types":[]},{"text":"impl Clone for Try","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for Typeof","synthetic":false,"types":[]},{"text":"impl Clone for Union","synthetic":false,"types":[]},{"text":"impl Clone for Unsafe","synthetic":false,"types":[]},{"text":"impl Clone for Unsized","synthetic":false,"types":[]},{"text":"impl Clone for Use","synthetic":false,"types":[]},{"text":"impl Clone for Virtual","synthetic":false,"types":[]},{"text":"impl Clone for Where","synthetic":false,"types":[]},{"text":"impl Clone for While","synthetic":false,"types":[]},{"text":"impl Clone for Yield","synthetic":false,"types":[]},{"text":"impl Clone for Add","synthetic":false,"types":[]},{"text":"impl Clone for AddEq","synthetic":false,"types":[]},{"text":"impl Clone for And","synthetic":false,"types":[]},{"text":"impl Clone for AndAnd","synthetic":false,"types":[]},{"text":"impl Clone for AndEq","synthetic":false,"types":[]},{"text":"impl Clone for At","synthetic":false,"types":[]},{"text":"impl Clone for Bang","synthetic":false,"types":[]},{"text":"impl Clone for Caret","synthetic":false,"types":[]},{"text":"impl Clone for CaretEq","synthetic":false,"types":[]},{"text":"impl Clone for Colon","synthetic":false,"types":[]},{"text":"impl Clone for Colon2","synthetic":false,"types":[]},{"text":"impl Clone for Comma","synthetic":false,"types":[]},{"text":"impl Clone for Div","synthetic":false,"types":[]},{"text":"impl Clone for DivEq","synthetic":false,"types":[]},{"text":"impl Clone for Dollar","synthetic":false,"types":[]},{"text":"impl Clone for Dot","synthetic":false,"types":[]},{"text":"impl Clone for Dot2","synthetic":false,"types":[]},{"text":"impl Clone for Dot3","synthetic":false,"types":[]},{"text":"impl Clone for DotDotEq","synthetic":false,"types":[]},{"text":"impl Clone for Eq","synthetic":false,"types":[]},{"text":"impl Clone for EqEq","synthetic":false,"types":[]},{"text":"impl Clone for Ge","synthetic":false,"types":[]},{"text":"impl Clone for Gt","synthetic":false,"types":[]},{"text":"impl Clone for Le","synthetic":false,"types":[]},{"text":"impl Clone for Lt","synthetic":false,"types":[]},{"text":"impl Clone for MulEq","synthetic":false,"types":[]},{"text":"impl Clone for Ne","synthetic":false,"types":[]},{"text":"impl Clone for Or","synthetic":false,"types":[]},{"text":"impl Clone for OrEq","synthetic":false,"types":[]},{"text":"impl Clone for OrOr","synthetic":false,"types":[]},{"text":"impl Clone for Pound","synthetic":false,"types":[]},{"text":"impl Clone for Question","synthetic":false,"types":[]},{"text":"impl Clone for RArrow","synthetic":false,"types":[]},{"text":"impl Clone for LArrow","synthetic":false,"types":[]},{"text":"impl Clone for Rem","synthetic":false,"types":[]},{"text":"impl Clone for RemEq","synthetic":false,"types":[]},{"text":"impl Clone for FatArrow","synthetic":false,"types":[]},{"text":"impl Clone for Semi","synthetic":false,"types":[]},{"text":"impl Clone for Shl","synthetic":false,"types":[]},{"text":"impl Clone for ShlEq","synthetic":false,"types":[]},{"text":"impl Clone for Shr","synthetic":false,"types":[]},{"text":"impl Clone for ShrEq","synthetic":false,"types":[]},{"text":"impl Clone for Star","synthetic":false,"types":[]},{"text":"impl Clone for Sub","synthetic":false,"types":[]},{"text":"impl Clone for SubEq","synthetic":false,"types":[]},{"text":"impl Clone for Tilde","synthetic":false,"types":[]},{"text":"impl Clone for Brace","synthetic":false,"types":[]},{"text":"impl Clone for Bracket","synthetic":false,"types":[]},{"text":"impl Clone for Paren","synthetic":false,"types":[]},{"text":"impl Clone for Group","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for ImplGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for TypeGenerics&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Turbofish&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Lifetime","synthetic":false,"types":[]},{"text":"impl Clone for LitStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByteStr","synthetic":false,"types":[]},{"text":"impl Clone for LitByte","synthetic":false,"types":[]},{"text":"impl Clone for LitChar","synthetic":false,"types":[]},{"text":"impl Clone for LitInt","synthetic":false,"types":[]},{"text":"impl Clone for LitFloat","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Cursor&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T, P&gt; Clone for Pairs&lt;'a, T, P&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;'a, T&gt; Clone for Iter&lt;'a, T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T, P&gt; Clone for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Clone,<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Abi","synthetic":false,"types":[]},{"text":"impl Clone for AngleBracketedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Arm","synthetic":false,"types":[]},{"text":"impl Clone for AttrStyle","synthetic":false,"types":[]},{"text":"impl Clone for Attribute","synthetic":false,"types":[]},{"text":"impl Clone for BareFnArg","synthetic":false,"types":[]},{"text":"impl Clone for BinOp","synthetic":false,"types":[]},{"text":"impl Clone for Binding","synthetic":false,"types":[]},{"text":"impl Clone for Block","synthetic":false,"types":[]},{"text":"impl Clone for BoundLifetimes","synthetic":false,"types":[]},{"text":"impl Clone for ConstParam","synthetic":false,"types":[]},{"text":"impl Clone for Constraint","synthetic":false,"types":[]},{"text":"impl Clone for Data","synthetic":false,"types":[]},{"text":"impl Clone for DataEnum","synthetic":false,"types":[]},{"text":"impl Clone for DataStruct","synthetic":false,"types":[]},{"text":"impl Clone for DataUnion","synthetic":false,"types":[]},{"text":"impl Clone for DeriveInput","synthetic":false,"types":[]},{"text":"impl Clone for Expr","synthetic":false,"types":[]},{"text":"impl Clone for ExprArray","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssign","synthetic":false,"types":[]},{"text":"impl Clone for ExprAssignOp","synthetic":false,"types":[]},{"text":"impl Clone for ExprAsync","synthetic":false,"types":[]},{"text":"impl Clone for ExprAwait","synthetic":false,"types":[]},{"text":"impl Clone for ExprBinary","synthetic":false,"types":[]},{"text":"impl Clone for ExprBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprBox","synthetic":false,"types":[]},{"text":"impl Clone for ExprBreak","synthetic":false,"types":[]},{"text":"impl Clone for ExprCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprCast","synthetic":false,"types":[]},{"text":"impl Clone for ExprClosure","synthetic":false,"types":[]},{"text":"impl Clone for ExprContinue","synthetic":false,"types":[]},{"text":"impl Clone for ExprField","synthetic":false,"types":[]},{"text":"impl Clone for ExprForLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprGroup","synthetic":false,"types":[]},{"text":"impl Clone for ExprIf","synthetic":false,"types":[]},{"text":"impl Clone for ExprIndex","synthetic":false,"types":[]},{"text":"impl Clone for ExprLet","synthetic":false,"types":[]},{"text":"impl Clone for ExprLit","synthetic":false,"types":[]},{"text":"impl Clone for ExprLoop","synthetic":false,"types":[]},{"text":"impl Clone for ExprMacro","synthetic":false,"types":[]},{"text":"impl Clone for ExprMatch","synthetic":false,"types":[]},{"text":"impl Clone for ExprMethodCall","synthetic":false,"types":[]},{"text":"impl Clone for ExprParen","synthetic":false,"types":[]},{"text":"impl Clone for ExprPath","synthetic":false,"types":[]},{"text":"impl Clone for ExprRange","synthetic":false,"types":[]},{"text":"impl Clone for ExprReference","synthetic":false,"types":[]},{"text":"impl Clone for ExprRepeat","synthetic":false,"types":[]},{"text":"impl Clone for ExprReturn","synthetic":false,"types":[]},{"text":"impl Clone for ExprStruct","synthetic":false,"types":[]},{"text":"impl Clone for ExprTry","synthetic":false,"types":[]},{"text":"impl Clone for ExprTryBlock","synthetic":false,"types":[]},{"text":"impl Clone for ExprTuple","synthetic":false,"types":[]},{"text":"impl Clone for ExprType","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnary","synthetic":false,"types":[]},{"text":"impl Clone for ExprUnsafe","synthetic":false,"types":[]},{"text":"impl Clone for ExprWhile","synthetic":false,"types":[]},{"text":"impl Clone for ExprYield","synthetic":false,"types":[]},{"text":"impl Clone for Field","synthetic":false,"types":[]},{"text":"impl Clone for FieldPat","synthetic":false,"types":[]},{"text":"impl Clone for FieldValue","synthetic":false,"types":[]},{"text":"impl Clone for Fields","synthetic":false,"types":[]},{"text":"impl Clone for FieldsNamed","synthetic":false,"types":[]},{"text":"impl Clone for FieldsUnnamed","synthetic":false,"types":[]},{"text":"impl Clone for File","synthetic":false,"types":[]},{"text":"impl Clone for FnArg","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItem","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ForeignItemType","synthetic":false,"types":[]},{"text":"impl Clone for GenericArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericMethodArgument","synthetic":false,"types":[]},{"text":"impl Clone for GenericParam","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for ImplItem","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for ImplItemType","synthetic":false,"types":[]},{"text":"impl Clone for Index","synthetic":false,"types":[]},{"text":"impl Clone for Item","synthetic":false,"types":[]},{"text":"impl Clone for ItemConst","synthetic":false,"types":[]},{"text":"impl Clone for ItemEnum","synthetic":false,"types":[]},{"text":"impl Clone for ItemExternCrate","synthetic":false,"types":[]},{"text":"impl Clone for ItemFn","synthetic":false,"types":[]},{"text":"impl Clone for ItemForeignMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemImpl","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for ItemMacro2","synthetic":false,"types":[]},{"text":"impl Clone for ItemMod","synthetic":false,"types":[]},{"text":"impl Clone for ItemStatic","synthetic":false,"types":[]},{"text":"impl Clone for ItemStruct","synthetic":false,"types":[]},{"text":"impl Clone for ItemTrait","synthetic":false,"types":[]},{"text":"impl Clone for ItemTraitAlias","synthetic":false,"types":[]},{"text":"impl Clone for ItemType","synthetic":false,"types":[]},{"text":"impl Clone for ItemUnion","synthetic":false,"types":[]},{"text":"impl Clone for ItemUse","synthetic":false,"types":[]},{"text":"impl Clone for Label","synthetic":false,"types":[]},{"text":"impl Clone for LifetimeDef","synthetic":false,"types":[]},{"text":"impl Clone for Lit","synthetic":false,"types":[]},{"text":"impl Clone for LitBool","synthetic":false,"types":[]},{"text":"impl Clone for Local","synthetic":false,"types":[]},{"text":"impl Clone for Macro","synthetic":false,"types":[]},{"text":"impl Clone for MacroDelimiter","synthetic":false,"types":[]},{"text":"impl Clone for Member","synthetic":false,"types":[]},{"text":"impl Clone for Meta","synthetic":false,"types":[]},{"text":"impl Clone for MetaList","synthetic":false,"types":[]},{"text":"impl Clone for MetaNameValue","synthetic":false,"types":[]},{"text":"impl Clone for MethodTurbofish","synthetic":false,"types":[]},{"text":"impl Clone for NestedMeta","synthetic":false,"types":[]},{"text":"impl Clone for ParenthesizedGenericArguments","synthetic":false,"types":[]},{"text":"impl Clone for Pat","synthetic":false,"types":[]},{"text":"impl Clone for PatBox","synthetic":false,"types":[]},{"text":"impl Clone for PatIdent","synthetic":false,"types":[]},{"text":"impl Clone for PatLit","synthetic":false,"types":[]},{"text":"impl Clone for PatMacro","synthetic":false,"types":[]},{"text":"impl Clone for PatOr","synthetic":false,"types":[]},{"text":"impl Clone for PatPath","synthetic":false,"types":[]},{"text":"impl Clone for PatRange","synthetic":false,"types":[]},{"text":"impl Clone for PatReference","synthetic":false,"types":[]},{"text":"impl Clone for PatRest","synthetic":false,"types":[]},{"text":"impl Clone for PatSlice","synthetic":false,"types":[]},{"text":"impl Clone for PatStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatTuple","synthetic":false,"types":[]},{"text":"impl Clone for PatTupleStruct","synthetic":false,"types":[]},{"text":"impl Clone for PatType","synthetic":false,"types":[]},{"text":"impl Clone for PatWild","synthetic":false,"types":[]},{"text":"impl Clone for Path","synthetic":false,"types":[]},{"text":"impl Clone for PathArguments","synthetic":false,"types":[]},{"text":"impl Clone for PathSegment","synthetic":false,"types":[]},{"text":"impl Clone for PredicateEq","synthetic":false,"types":[]},{"text":"impl Clone for PredicateLifetime","synthetic":false,"types":[]},{"text":"impl Clone for PredicateType","synthetic":false,"types":[]},{"text":"impl Clone for QSelf","synthetic":false,"types":[]},{"text":"impl Clone for RangeLimits","synthetic":false,"types":[]},{"text":"impl Clone for Receiver","synthetic":false,"types":[]},{"text":"impl Clone for ReturnType","synthetic":false,"types":[]},{"text":"impl Clone for Signature","synthetic":false,"types":[]},{"text":"impl Clone for Stmt","synthetic":false,"types":[]},{"text":"impl Clone for TraitBound","synthetic":false,"types":[]},{"text":"impl Clone for TraitBoundModifier","synthetic":false,"types":[]},{"text":"impl Clone for TraitItem","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemConst","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMacro","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemMethod","synthetic":false,"types":[]},{"text":"impl Clone for TraitItemType","synthetic":false,"types":[]},{"text":"impl Clone for Type","synthetic":false,"types":[]},{"text":"impl Clone for TypeArray","synthetic":false,"types":[]},{"text":"impl Clone for TypeBareFn","synthetic":false,"types":[]},{"text":"impl Clone for TypeGroup","synthetic":false,"types":[]},{"text":"impl Clone for TypeImplTrait","synthetic":false,"types":[]},{"text":"impl Clone for TypeInfer","synthetic":false,"types":[]},{"text":"impl Clone for TypeMacro","synthetic":false,"types":[]},{"text":"impl Clone for TypeNever","synthetic":false,"types":[]},{"text":"impl Clone for TypeParam","synthetic":false,"types":[]},{"text":"impl Clone for TypeParamBound","synthetic":false,"types":[]},{"text":"impl Clone for TypeParen","synthetic":false,"types":[]},{"text":"impl Clone for TypePath","synthetic":false,"types":[]},{"text":"impl Clone for TypePtr","synthetic":false,"types":[]},{"text":"impl Clone for TypeReference","synthetic":false,"types":[]},{"text":"impl Clone for TypeSlice","synthetic":false,"types":[]},{"text":"impl Clone for TypeTraitObject","synthetic":false,"types":[]},{"text":"impl Clone for TypeTuple","synthetic":false,"types":[]},{"text":"impl Clone for UnOp","synthetic":false,"types":[]},{"text":"impl Clone for UseGlob","synthetic":false,"types":[]},{"text":"impl Clone for UseGroup","synthetic":false,"types":[]},{"text":"impl Clone for UseName","synthetic":false,"types":[]},{"text":"impl Clone for UsePath","synthetic":false,"types":[]},{"text":"impl Clone for UseRename","synthetic":false,"types":[]},{"text":"impl Clone for UseTree","synthetic":false,"types":[]},{"text":"impl Clone for Variadic","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for VisCrate","synthetic":false,"types":[]},{"text":"impl Clone for VisPublic","synthetic":false,"types":[]},{"text":"impl Clone for VisRestricted","synthetic":false,"types":[]},{"text":"impl Clone for Visibility","synthetic":false,"types":[]},{"text":"impl Clone for WhereClause","synthetic":false,"types":[]},{"text":"impl Clone for WherePredicate","synthetic":false,"types":[]},{"text":"impl&lt;'c, 'a&gt; Clone for StepCursor&lt;'c, 'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Error","synthetic":false,"types":[]}];
implementors["wasm_bindgen"] = [{"text":"impl Clone for JsValue","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Clamped&lt;T&gt;","synthetic":false,"types":[]}];
implementors["wasm_bindgen_backend"] = [{"text":"impl Clone for Program","synthetic":false,"types":[]},{"text":"impl Clone for Export","synthetic":false,"types":[]},{"text":"impl Clone for MethodSelf","synthetic":false,"types":[]},{"text":"impl Clone for Import","synthetic":false,"types":[]},{"text":"impl Clone for ImportModule","synthetic":false,"types":[]},{"text":"impl Clone for ImportKind","synthetic":false,"types":[]},{"text":"impl Clone for ImportFunction","synthetic":false,"types":[]},{"text":"impl Clone for ImportFunctionKind","synthetic":false,"types":[]},{"text":"impl Clone for MethodKind","synthetic":false,"types":[]},{"text":"impl Clone for Operation","synthetic":false,"types":[]},{"text":"impl Clone for OperationKind","synthetic":false,"types":[]},{"text":"impl Clone for ImportStatic","synthetic":false,"types":[]},{"text":"impl Clone for ImportType","synthetic":false,"types":[]},{"text":"impl Clone for ImportEnum","synthetic":false,"types":[]},{"text":"impl Clone for Function","synthetic":false,"types":[]},{"text":"impl Clone for Struct","synthetic":false,"types":[]},{"text":"impl Clone for StructField","synthetic":false,"types":[]},{"text":"impl Clone for Enum","synthetic":false,"types":[]},{"text":"impl Clone for Variant","synthetic":false,"types":[]},{"text":"impl Clone for TypeKind","synthetic":false,"types":[]},{"text":"impl Clone for TypeLocation","synthetic":false,"types":[]}];
implementors["web_sys"] = [{"text":"impl Clone for AbortController","synthetic":false,"types":[]},{"text":"impl Clone for AbortSignal","synthetic":false,"types":[]},{"text":"impl Clone for AddEventListenerOptions","synthetic":false,"types":[]},{"text":"impl Clone for AnimationEvent","synthetic":false,"types":[]},{"text":"impl Clone for BinaryType","synthetic":false,"types":[]},{"text":"impl Clone for Blob","synthetic":false,"types":[]},{"text":"impl Clone for BlobPropertyBag","synthetic":false,"types":[]},{"text":"impl Clone for CharacterData","synthetic":false,"types":[]},{"text":"impl Clone for DedicatedWorkerGlobalScope","synthetic":false,"types":[]},{"text":"impl Clone for Document","synthetic":false,"types":[]},{"text":"impl Clone for DomException","synthetic":false,"types":[]},{"text":"impl Clone for DomTokenList","synthetic":false,"types":[]},{"text":"impl Clone for DragEvent","synthetic":false,"types":[]},{"text":"impl Clone for Element","synthetic":false,"types":[]},{"text":"impl Clone for ErrorEvent","synthetic":false,"types":[]},{"text":"impl Clone for Event","synthetic":false,"types":[]},{"text":"impl Clone for EventTarget","synthetic":false,"types":[]},{"text":"impl Clone for File","synthetic":false,"types":[]},{"text":"impl Clone for FileList","synthetic":false,"types":[]},{"text":"impl Clone for FilePropertyBag","synthetic":false,"types":[]},{"text":"impl Clone for FileReader","synthetic":false,"types":[]},{"text":"impl Clone for FocusEvent","synthetic":false,"types":[]},{"text":"impl Clone for Headers","synthetic":false,"types":[]},{"text":"impl Clone for History","synthetic":false,"types":[]},{"text":"impl Clone for HtmlButtonElement","synthetic":false,"types":[]},{"text":"impl Clone for HtmlElement","synthetic":false,"types":[]},{"text":"impl Clone for HtmlInputElement","synthetic":false,"types":[]},{"text":"impl Clone for HtmlLinkElement","synthetic":false,"types":[]},{"text":"impl Clone for HtmlSelectElement","synthetic":false,"types":[]},{"text":"impl Clone for HtmlTextAreaElement","synthetic":false,"types":[]},{"text":"impl Clone for InputEvent","synthetic":false,"types":[]},{"text":"impl Clone for KeyboardEvent","synthetic":false,"types":[]},{"text":"impl Clone for Location","synthetic":false,"types":[]},{"text":"impl Clone for MediaQueryList","synthetic":false,"types":[]},{"text":"impl Clone for MessageEvent","synthetic":false,"types":[]},{"text":"impl Clone for MouseEvent","synthetic":false,"types":[]},{"text":"impl Clone for Node","synthetic":false,"types":[]},{"text":"impl Clone for ObserverCallback","synthetic":false,"types":[]},{"text":"impl Clone for PointerEvent","synthetic":false,"types":[]},{"text":"impl Clone for PopStateEvent","synthetic":false,"types":[]},{"text":"impl Clone for ProgressEvent","synthetic":false,"types":[]},{"text":"impl Clone for ReferrerPolicy","synthetic":false,"types":[]},{"text":"impl Clone for Request","synthetic":false,"types":[]},{"text":"impl Clone for RequestCache","synthetic":false,"types":[]},{"text":"impl Clone for RequestCredentials","synthetic":false,"types":[]},{"text":"impl Clone for RequestInit","synthetic":false,"types":[]},{"text":"impl Clone for RequestMode","synthetic":false,"types":[]},{"text":"impl Clone for RequestRedirect","synthetic":false,"types":[]},{"text":"impl Clone for Response","synthetic":false,"types":[]},{"text":"impl Clone for Storage","synthetic":false,"types":[]},{"text":"impl Clone for Text","synthetic":false,"types":[]},{"text":"impl Clone for TouchEvent","synthetic":false,"types":[]},{"text":"impl Clone for TransitionEvent","synthetic":false,"types":[]},{"text":"impl Clone for UiEvent","synthetic":false,"types":[]},{"text":"impl Clone for Url","synthetic":false,"types":[]},{"text":"impl Clone for WebSocket","synthetic":false,"types":[]},{"text":"impl Clone for WheelEvent","synthetic":false,"types":[]},{"text":"impl Clone for Window","synthetic":false,"types":[]},{"text":"impl Clone for Worker","synthetic":false,"types":[]},{"text":"impl Clone for WorkerGlobalScope","synthetic":false,"types":[]},{"text":"impl Clone for WorkerOptions","synthetic":false,"types":[]}];
implementors["yew"] = [{"text":"impl&lt;IN&gt; Clone for Callback&lt;IN&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Classes","synthetic":false,"types":[]},{"text":"impl Clone for AnyScope","synthetic":false,"types":[]},{"text":"impl&lt;COMP:&nbsp;Component&gt; Clone for Scope&lt;COMP&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for ChildrenRenderer&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for NodeRef","synthetic":false,"types":[]},{"text":"impl Clone for Key","synthetic":false,"types":[]},{"text":"impl Clone for VComp","synthetic":false,"types":[]},{"text":"impl&lt;COMP:&nbsp;Component&gt; Clone for VChild&lt;COMP&gt;","synthetic":false,"types":[]},{"text":"impl Clone for VList","synthetic":false,"types":[]},{"text":"impl Clone for VNode","synthetic":false,"types":[]},{"text":"impl Clone for VTag","synthetic":false,"types":[]},{"text":"impl Clone for VText","synthetic":false,"types":[]},{"text":"impl Clone for PositionalAttr","synthetic":false,"types":[]},{"text":"impl Clone for Attributes","synthetic":false,"types":[]},{"text":"impl&lt;AGN:&nbsp;Agent&gt; Clone for AgentLink&lt;AGN&gt;","synthetic":false,"types":[]},{"text":"impl Clone for HandlerId","synthetic":false,"types":[]},{"text":"impl Clone for FileData","synthetic":false,"types":[]},{"text":"impl Clone for FileChunk","synthetic":false,"types":[]},{"text":"impl Clone for WindowDimensions","synthetic":false,"types":[]},{"text":"impl Clone for WebSocketStatus","synthetic":false,"types":[]},{"text":"impl Clone for WebSocketError","synthetic":false,"types":[]}];
implementors["yew_router"] = [{"text":"impl&lt;STATE:&nbsp;Clone&gt; Clone for Route&lt;STATE&gt;","synthetic":false,"types":[]},{"text":"impl&lt;SW:&nbsp;Clone&gt; Clone for Props&lt;SW&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;SW: Switch + Clone,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for Msg","synthetic":false,"types":[]},{"text":"impl&lt;STATE:&nbsp;Clone&gt; Clone for Msg&lt;STATE&gt;","synthetic":false,"types":[]},{"text":"impl&lt;SW:&nbsp;Clone + Switch + 'static, STATE:&nbsp;Clone + RouterState&gt; Clone for Render&lt;SW, STATE&gt;","synthetic":false,"types":[]},{"text":"impl&lt;SW:&nbsp;Clone + Switch + 'static, STATE:&nbsp;Clone + RouterState&gt; Clone for Redirect&lt;SW, STATE&gt;","synthetic":false,"types":[]},{"text":"impl&lt;STATE:&nbsp;Clone + RouterState, SW:&nbsp;Clone + Switch + 'static&gt; Clone for Props&lt;STATE, SW&gt;","synthetic":false,"types":[]},{"text":"impl Clone for RouteMatcher","synthetic":false,"types":[]},{"text":"impl Clone for MatcherSettings","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for LeadingSlash&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone&gt; Clone for Permissive&lt;U&gt;","synthetic":false,"types":[]},{"text":"impl&lt;U:&nbsp;Clone + Debug&gt; Clone for AllowMissing&lt;U&gt;","synthetic":false,"types":[]}];
implementors["yew_router_route_parser"] = [{"text":"impl Clone for FieldNamingScheme","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for PrettyParseError&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for ParseError","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for RouteParserToken&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for RefCaptureVariant&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for CaptureOrExact&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for MatcherToken","synthetic":false,"types":[]},{"text":"impl Clone for CaptureVariant","synthetic":false,"types":[]}];
implementors["yewprint"] = [{"text":"impl Clone for ButtonGroupProps","synthetic":false,"types":[]},{"text":"impl Clone for ButtonProps","synthetic":false,"types":[]},{"text":"impl Clone for CalloutProps","synthetic":false,"types":[]},{"text":"impl Clone for CardProps","synthetic":false,"types":[]},{"text":"impl Clone for CollapseProps","synthetic":false,"types":[]},{"text":"impl Clone for ControlGroupProps","synthetic":false,"types":[]},{"text":"impl Clone for DividerProps","synthetic":false,"types":[]},{"text":"impl Clone for H1Props","synthetic":false,"types":[]},{"text":"impl Clone for H2Props","synthetic":false,"types":[]},{"text":"impl Clone for H3Props","synthetic":false,"types":[]},{"text":"impl Clone for H4Props","synthetic":false,"types":[]},{"text":"impl Clone for H5Props","synthetic":false,"types":[]},{"text":"impl Clone for H6Props","synthetic":false,"types":[]},{"text":"impl Clone for BlockquoteProps","synthetic":false,"types":[]},{"text":"impl Clone for CodeProps","synthetic":false,"types":[]},{"text":"impl Clone for LabelProps","synthetic":false,"types":[]},{"text":"impl Clone for PreProps","synthetic":false,"types":[]},{"text":"impl Clone for OlProps","synthetic":false,"types":[]},{"text":"impl Clone for UlProps","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + PartialEq + 'static&gt; Clone for HtmlSelectProps&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for IconName","synthetic":false,"types":[]},{"text":"impl Clone for IconProps","synthetic":false,"types":[]},{"text":"impl Clone for TextInputType","synthetic":false,"types":[]},{"text":"impl Clone for InputGroupProps","synthetic":false,"types":[]},{"text":"impl Clone for MenuProps","synthetic":false,"types":[]},{"text":"impl Clone for MenuItemProps","synthetic":false,"types":[]},{"text":"impl Clone for MenuDividerProps","synthetic":false,"types":[]},{"text":"impl Clone for ProgressBarProps","synthetic":false,"types":[]},{"text":"impl Clone for SwitchProps","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone + PartialEq&gt; Clone for TabsProps&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for Tab&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for TagProps","synthetic":false,"types":[]},{"text":"impl Clone for TextProps","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TreeData&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for TreeProps&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for NodeData&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Intent","synthetic":false,"types":[]},{"text":"impl Clone for Elevation","synthetic":false,"types":[]}];
implementors["yewprint_doc"] = [{"text":"impl Clone for DocMenu","synthetic":false,"types":[]},{"text":"impl Clone for ExampleContainerProps","synthetic":false,"types":[]}];
implementors["yewtil"] = [{"text":"impl&lt;T&gt; Clone for Irc&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Clone for Mrc&lt;T&gt;","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()